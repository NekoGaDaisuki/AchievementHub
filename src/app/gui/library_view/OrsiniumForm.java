/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.gui.library_view;

/**
 *
 * @author Lexi
 */
class OrsiniumForm extends javax.swing.JPanel
{

    /**
     * Creates new form OrsiniumForm
     */
    private OrsiniumForm()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        ancientsOrcsStylePane = new javax.swing.JScrollPane();
        ancientsOrcsStyleTable = new javax.swing.JTable();
        trinimacStylePane = new javax.swing.JScrollPane();
        trinimacStyleTable = new javax.swing.JTable();
        malacathStylePane = new javax.swing.JScrollPane();
        malacathStyleTable = new javax.swing.JTable();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ancientsOrcsStyleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {"Motifs Artisanaux 21, Ch. 1 : Les Haches Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 2 : Les Ceintures Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 3 : Les Bottes Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 4 : Les Arcs Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 5 : Les Plastrons Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 6 : Les Dagues Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 7 : Les Gants Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 8 : Les Casques Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 9 : Les Jambières Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 10 : Les Masses Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 11 : Les Boucliers Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 12 : Les Épaulières Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 13 : Les Bâtons Orques Antiques", null},
                {"Motifs Artisanaux 21, Ch. 14 : Les Épées Orques Antiques", null}
            },
            new String []
            {
                "", ""
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        ancientsOrcsStyleTable.getTableHeader().setReorderingAllowed(false);
        ancientsOrcsStylePane.setViewportView(ancientsOrcsStyleTable);
        if (ancientsOrcsStyleTable.getColumnModel().getColumnCount() > 0)
        {
            ancientsOrcsStyleTable.getColumnModel().getColumn(0).setResizable(false);
            ancientsOrcsStyleTable.getColumnModel().getColumn(0).setPreferredWidth(350);
            ancientsOrcsStyleTable.getColumnModel().getColumn(1).setResizable(false);
            ancientsOrcsStyleTable.getColumnModel().getColumn(1).setPreferredWidth(60);
        }

        trinimacStyleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {"Motifs Artisanaux 22, Ch. 1 : Les Haches de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 2 : Les Ceintures de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 3 : Les Bottes de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 4 : Les Arcs de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 5 : Les Plastrons de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 6 : Les Dagues de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 7 : Les Gants de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 8 : Les Casques de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 9 : Les Jambières de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 10 : Les Masses de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 11 : Les Boucliers de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 12 : Les Épaulières de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 13 : Les Bâtons de Trinimac", null},
                {"Motifs Artisanaux 22, Ch. 14 : Les Épées de Trinimac", null}
            },
            new String []
            {
                "", ""
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        trinimacStyleTable.getTableHeader().setReorderingAllowed(false);
        trinimacStylePane.setViewportView(trinimacStyleTable);
        if (trinimacStyleTable.getColumnModel().getColumnCount() > 0)
        {
            trinimacStyleTable.getColumnModel().getColumn(0).setResizable(false);
            trinimacStyleTable.getColumnModel().getColumn(0).setPreferredWidth(350);
            trinimacStyleTable.getColumnModel().getColumn(1).setResizable(false);
            trinimacStyleTable.getColumnModel().getColumn(1).setPreferredWidth(60);
        }

        malacathStyleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {"Motifs Artisanaux 23, Ch. 1 : Les Haches de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 2 : Les Ceintures de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 3 : Les Bottes de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 4 : Les Arcs de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 5 : Les Plastrons de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 6 : Les Dagues de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 7 : Les Gants de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 8 : Les Casques de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 9 : Les Jambières de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 10 : Les Masses de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 11 : Les Boucliers de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 12 : Les Épaulières de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 13 : Les Bâtons de Malacath", null},
                {"Motifs Artisanaux 23, Ch. 14 : Les Épées de Malacath", null}
            },
            new String []
            {
                "", ""
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        malacathStyleTable.getTableHeader().setReorderingAllowed(false);
        malacathStylePane.setViewportView(malacathStyleTable);
        if (malacathStyleTable.getColumnModel().getColumnCount() > 0)
        {
            malacathStyleTable.getColumnModel().getColumn(0).setResizable(false);
            malacathStyleTable.getColumnModel().getColumn(0).setPreferredWidth(350);
            malacathStyleTable.getColumnModel().getColumn(1).setResizable(false);
            malacathStyleTable.getColumnModel().getColumn(1).setPreferredWidth(60);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(malacathStylePane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ancientsOrcsStylePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(trinimacStylePane, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ancientsOrcsStylePane, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trinimacStylePane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(malacathStylePane, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(265, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    static OrsiniumForm getInstance()
    {
        OrsiniumForm instance = OrsiniumForm.INSTANCE;
        if (instance == null)
        {
            synchronized (OrsiniumForm.class)
            {
                instance = OrsiniumForm.INSTANCE;
                if (instance == null)
                {
                    OrsiniumForm.INSTANCE = instance = new OrsiniumForm();
                }
            }
        }
        return instance;
    }

    // <editor-fold defaultstate="collapsed" desc="importTables Code">
    static void importTables(LibraryViewData.orsiniumTableModel orsiniumTableModel)
    {
        java.util.Vector ancientsOrcsData = orsiniumTableModel.getAncientsOrcsTable();
        for (int i = 0; i < ancientsOrcsData.size(); ++i)
        {
            for (int j = 1; j < ((java.util.Vector) ancientsOrcsData.elementAt(i)).size(); ++j)
            {
                getInstance().ancientsOrcsStyleTable.setValueAt(((java.util.Vector) ancientsOrcsData.elementAt(i)).elementAt(j), i, j);
            }
        }
        java.util.Vector malacathData = orsiniumTableModel.getMalacathTable();
        for (int i = 0; i < malacathData.size(); ++i)
        {
            for (int j = 1; j < ((java.util.Vector) malacathData.elementAt(i)).size(); ++j)
            {
                getInstance().malacathStyleTable.setValueAt(((java.util.Vector) malacathData.elementAt(i)).elementAt(j), i, j);
            }
        }
        java.util.Vector trinimacData = orsiniumTableModel.getTrinimacTable();
        for (int i = 0; i < trinimacData.size(); ++i)
        {
            for (int j = 1; j < ((java.util.Vector) trinimacData.elementAt(i)).size(); ++j)
            {
                getInstance().trinimacStyleTable.setValueAt(((java.util.Vector) trinimacData.elementAt(i)).elementAt(j), i, j);
            }
        }
    }// </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="retrieveTables Code">
    static LibraryViewData.orsiniumTableModel retrieveTables()
    {
        LibraryViewData.orsiniumTableModel tables = new LibraryViewData.orsiniumTableModel();
        tables.setAncientsOrcsTable(getInstance().ancientsOrcsStyleTable.getModel());
        tables.setMalacathTable(getInstance().malacathStyleTable.getModel());
        tables.setTrinimacTable(getInstance().trinimacStyleTable.getModel());
        return tables;
    }// </editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ancientsOrcsStylePane;
    private javax.swing.JTable ancientsOrcsStyleTable;
    private javax.swing.JScrollPane malacathStylePane;
    private javax.swing.JTable malacathStyleTable;
    private javax.swing.JScrollPane trinimacStylePane;
    private javax.swing.JTable trinimacStyleTable;
    // End of variables declaration//GEN-END:variables

    private static volatile OrsiniumForm INSTANCE;
}
